lib-wait {
    position: absolute;
    left: 0px;
}
.loading, .loading * {
    cursor: progress; 
}

#transcript {
    max-width: 1000px;
    margin: auto;
}

.main-participant {
    font-weight: bold;
}
.highlight {
    background-color: yellow;
}
.match {
    background-color: lightgreen;
}
.menu-word {
    font-style: italic;
    color: var(--theme-text-color);
}
@keyframes fade-background-in {
    from { background-color: transparent; }
    to { background-color: lightgray; }
}
.playing {
    animation-name: fade-background-in;
    animation-duration: 2s;
    background-color: lightgray;
}
@keyframes fade-background-out {
    from { background-color: lightgray; }
    to { background-color: white; }
}
.played {
    animation-name: fade-background-out;
    animation-duration: 2s;
    background-color: transparent;
}
.layer-word {
    cursor: default;
    cursor: context-menu;
}
#word-menu {
    position: absolute;
    z-index: 10;
}
#word-menu .header {
    height: 18px;
}
.permalink {
    font-size: 16px;
}
.permalink:hover {
    text-decoration: none;
}
nav, nav > div {
    position: fixed;
    top: 50%;
    z-index: 5; /* above media */
}
#previous-transcript-link {
    left: 10px;
    text-align: left;
}
#previous-transcript-link a:hover::after {
    content: attr(title);
    background-color: var(--theme-background-color);
}
#next-transcript-link {
    right: 10px;
    text-align: right;
}
#next-transcript-link a:hover::before {
    content: attr(title);
    background-color: var(--theme-background-color);
}
#previous-transcript-link img, #next-transcript-link img {
    width: 16px;
    height: 16px;
    vertical-align: middle;
}
/* consecutive blocks are vertical, simultaneous are horizontal */
#temporal-blocks .block {
    display: flex;
}
#temporal-blocks .consecutive {
    flex-direction: column;
}
#temporal-blocks .simultaneous {
    flex-direction: row;
}
#temporal-blocks .simultaneous .utterance {
    flex-grow: 1;
    flex-basis: 0;
}
#temporal-blocks .consecutive, #temporal-blocks .simultaneous .utterance {
    border-left: 1px darkgray solid;
    border-bottom: 1px darkgray solid;
    border-top-left-radius: 10px;
    border-bottom-left-radius: 10px;
    margin: 5px;
    margin-top: 15px;
    padding: 5px;
}

/* only the first consecutive utterance, simultaneous utterances are all labelled */
.words, .utterance-tag {
    margin-left: 2.5vw;
}
.words > .word  {
    padding-left: 0px;
    padding-right: 0px;
}
#temporal-blocks .block legend {
    display: block;
    font-style: italic;
    color: darkgray;
    position: relative;
    top: -12pt;
    margin-bottom: -12pt; /* so the legend doesn't displace the words below */
}
#temporal-blocks .consecutive legend {
    display: none;
}
#temporal-blocks .consecutive .utterance:first-child legend {
    display: block;
}

/* padding between utterances in the same turn */
.utterance:not(:first-child) {
    padding-top: 0.75em;
}
.utterance-tag {
    display: inline-block;
}
.consecutive .utterance-tag {
    width: 97.5%;
}
.simultaneous .utterance-tag {
    width: 95%;
}
.token {
    display: inline-block;
}
.token .layer {
    display: flex;
    flex-direction: row;
}
.token .layer.segment {
    align-items: baseline;
}
.token .layer.span {
    display: flex;
    flex-direction: column;
}
.layer.span .annotation.during {
    border-top: 1px solid;
}
.layer.span .annotation.during label {
    position: absolute;
}
.layer.span .annotation.first {
    border-top: 1px solid;
    border-left: 1px solid;
    border-top-left-radius: 5px;
}
.layer.span.alignment-2 .annotation.last {
    border-top: 1px solid;
    border-right: 1px solid;
    border-top-right-radius: 5px;
}
.layer.span.alignment-2 .annotation.first.last {
    text-align: center;
}
.layer.span .annotation.first.last label {
    position: revert;
}
.layer.span .annotation.empty {
    border-top: 1px solid transparent;
}
.alignment-0 .annotation:not(:first-child) {
    position: fixed;
    opacity: 0;
}
.layer.span .annotation label.continued {
    margin-left: 10px;
}
.layer.span .annotation.jump {
    position: relative;
    max-width: 50px;
    left: 50%;
    white-space: nowrap;
}

.generate-layer {
    display: flex;
    flex-direction: row;
    justify-content: end;
    align-items: center;
}

/* Meta-data */

.tab-labels.video {
    width: 70vw; /* squish tabes to the right to avoid video */
    max-width: 100%;
}
.tab-labels label {
    cursor: context-menu;
}
.tab-labels label img {
    width: 16px;
    height: 16px;
    vertical-align: middle;
}
#layers, #participants, #formats {
    padding-top: 10px;
}
/* TODO This does't work in production because the URL fails:
.participants ul {
    list-style: circle;
    list-style-image: url('/assets/person.svg');
}
*/
.formats ul {
    list-style: none;
}
.formats a > span {
    margin-left: 5px;
}

#attributes {
    width: 100%;
    text-align: left;
}

.buttons {
    display: block;
    padding-top: 4px;
    padding-bottom: 4px;
}
.attribute .value .description {
    padding-left: 10px;
}
.attribute .value .description:before {
    content: '(';
}
.attribute .value .description:after {
    content: ')';
}
.attribute .value {
    max-width: 400px;
}
.attribute-list.tab-body {
    border: 1px var(--theme-text-color) solid;
    border-top: none;
    margin-left: -1px; /* to make annoying overshoot at least symmetrical */
}
.attribute-list .participant {
    padding: 5px;
}
.divergent::before {
    content: 'âš ';
    color: var(--theme-warning-color);
    display: inline-block;
    vertical-align: middle;
}
/* Media */

lib-layer-checkboxes {  /* layer selection on top of media */
    background-color: var(--theme-background-color);
    position: relative;
    z-index: 5;
}

#media {
    position: fixed;
    top: 60px;
    right: 10px;
    min-width: 300px;
    background: var(--theme-background-color);
    padding: 0px;
    max-height: 100%;
    overflow: auto;
    white-space: nowrap;
    cursor: default;
    z-index: 2;
}
#media img.icon {
    width: 16px;
    height: 16px;
    vertical-align: middle;
}
#media input {
    vertical-align: middle;
}
#media .file-link, #media .file-name {
    margin-left: 3px;
}
#media .visualization img {
    width: 300px;
}
#media .visualization video {
    width: 300px;
}
#transcript.video-zoomed {
    margin-left: 0px;
}
.video-zoomed #media video, .video-zoomed #temporal-blocks {
    width: 44vw;
}
/* subtitle voice colours */
::cue(v.speaker1) { color: MistyRose; }
::cue(v.speaker2) { color: LightSkyBlue; }
::cue(v.speaker3) { color: Moccasin; }
::cue(v.speaker4) { color: PaleGreen; }

/* Praat */

#media-controls {
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
}
#praat-integration {
    flex-grow: 1;
    display: flex;
    align-items: center;
}
#media-controls lib-button { /* Buttons after praat-message are on top */
    z-index: 3;
}
#praat-message {
    white-space: nowrap;
    width: 90%;
    position: absolute;
    text-align: center;
    overflow: clip;    
}
#praat-progress {
    width: 99%;
}
#praat-progress.error::-webkit-progress-value, #praat-progress.error::-moz-progress-bar {
    background-color: var(--theme-error-color);
}
.import-changes {
    position: absolute;
    z-index: 5;
}

.annotation img.icon {
}
img.preview {
    max-width: 200px;
    position: absolute;
    z-index: 5;
}

/* Layout on wider screens */
@media all and (min-width: 640px) {
    lib-layer-checkboxes { /* layer selector is horizontal*/
        display: flex;
        flex-direction: row;
        justify-content: center;
    }
}
